<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.card.dao.CardDao">
    <delete id="cardDeleteByIds">
        delete from card where id in
        <foreach collection="ids" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </delete>
    <update id="cardUpdateById">
        update card
        <set>
            <if test="card.content != null and card.content != ''">
                content = #{card.content}
            </if>
            <if test="card.state != null">
                ,state = #{card.state}
            </if>
            <if test="card.productId != null and card.productId != ''">
                ,product_id = #{card.productId}
            </if>
        </set>
        where id = #{id}
    </update>
    <insert id="cardInsert">
        insert into card(content,state,product_id,create_time) values
        (#{card.content},#{card.state},#{card.productId},#{card.createTime})
    </insert>

    <select id="cardExportFindByStateAndTime" resultType="com.card.command.export.CardExport">
        select card.id id, card.content content, product.name productName
        from (select card.id, card.content, card.product_id
        from card
        <where>
            <if test="state != null">
                state = #{state}
            </if>
            <if test="startTime != null and endTime != null">
                create_time between #{startTime} and #{endTime}
            </if>
        </where>
        ) card
        left join product on card.product_id = product.id
        order by product.id
    </select>
</mapper>